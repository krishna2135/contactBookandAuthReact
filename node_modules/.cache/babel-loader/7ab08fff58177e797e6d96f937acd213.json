{"ast":null,"code":"var _jsxFileName = \"E:\\\\contact-bok-mern\\\\contact-book-react\\\\src\\\\components\\\\ContactTable.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Button, Card, IconButton } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AddIcon from '@material-ui/icons/Add';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport MaterialTable from 'material-table';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { deleteContact, deleteContacts } from '../actions/contactActions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  button: {\n    margin: theme.spacing(1)\n  },\n  card: {\n    margin: '10px'\n  },\n  title: {\n    flexGrow: 1,\n    textAlign: 'center',\n    fontSize: '1.96rem'\n  }\n}));\n\nconst ContactTable = ({\n  handleClickOpen,\n  setCurrentId\n}) => {\n  _s();\n\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const contacts = useSelector(state => state.contacts);\n  console.log(contacts, \"uuuuu\");\n\n  const delContact = id => {\n    dispatch(deleteContact(id));\n  };\n\n  const delContacts = idArr => {\n    dispatch(deleteContacts(idArr));\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        textAlign: 'right'\n      },\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        size: \"large\",\n        className: classes.button,\n        startIcon: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 22\n        }, this),\n        onClick: handleClickOpen,\n        children: \"Add Contact\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      children: /*#__PURE__*/_jsxDEV(MaterialTable, {\n        title: \"Contact Details\",\n        columns: [{\n          title: 'Image',\n          field: 'selectedImage',\n          render: rowData => /*#__PURE__*/_jsxDEV(\"img\", {\n            alt: \"Userimage\",\n            style: {\n              height: 36,\n              borderRadius: '50%'\n            },\n            src: rowData.selectedImage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 17\n          }, this)\n        }, {\n          title: 'Name',\n          field: 'name'\n        }, {\n          title: 'Email ID',\n          field: 'email'\n        }, {\n          title: 'Phone No',\n          field: 'phoneNo1'\n        }, {\n          title: 'Alt Phone No',\n          field: 'phoneNo2'\n        }, {\n          title: 'Address',\n          field: 'address'\n        }, {\n          title: 'Edit/Delete',\n          field: 'edit',\n          render: rowData => rowData && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(IconButton, {\n              color: \"primary\",\n              onClick: () => {\n                setCurrentId(rowData._id);\n                handleClickOpen();\n              },\n              children: /*#__PURE__*/_jsxDEV(EditIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n              color: \"secondary\",\n              onClick: () => {\n                delContact(rowData._id);\n              },\n              children: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true)\n        }],\n        data: contacts,\n        actions: [{\n          tooltip: 'Remove All Selected Contacts',\n          icon: 'delete',\n          onClick: (evt, data) => delContacts(data.map(a => a._id))\n        }],\n        options: {\n          actionsColumnIndex: -1,\n          exportButton: true,\n          selection: true\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(ContactTable, \"2mnktUgng64AaXPw21eB6wpDnrY=\", false, function () {\n  return [useStyles, useDispatch, useSelector];\n});\n\n_c = ContactTable;\nexport default ContactTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"ContactTable\");","map":{"version":3,"sources":["E:/contact-bok-mern/contact-book-react/src/components/ContactTable.js"],"names":["React","Button","Card","IconButton","makeStyles","AddIcon","EditIcon","DeleteIcon","MaterialTable","useDispatch","useSelector","deleteContact","deleteContacts","useStyles","theme","button","margin","spacing","card","title","flexGrow","textAlign","fontSize","ContactTable","handleClickOpen","setCurrentId","classes","dispatch","contacts","state","console","log","delContact","id","delContacts","idArr","field","render","rowData","height","borderRadius","selectedImage","_id","tooltip","icon","onClick","evt","data","map","a","actionsColumnIndex","exportButton","selection"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Button, Card, IconButton } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AddIcon from '@material-ui/icons/Add';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport MaterialTable from 'material-table';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { deleteContact, deleteContacts } from '../actions/contactActions';\n\nconst useStyles = makeStyles((theme) => ({\n  button: {\n    margin: theme.spacing(1),\n  },\n  card: {\n    margin: '10px',\n  },\n  title: {\n    flexGrow: 1,\n    textAlign: 'center',\n    fontSize: '1.96rem',\n  },\n}));\n\nconst ContactTable = ({ handleClickOpen, setCurrentId }) => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  const contacts = useSelector((state) => state.contacts);\n  console.log(contacts,\"uuuuu\");\n\n  const delContact = (id) => {\n    dispatch(deleteContact(id));\n  };\n\n  const delContacts = (idArr) => {\n    dispatch(deleteContacts(idArr));\n  };\n\n  return (\n    <>\n      <div style={{ textAlign: 'right' }}>\n        <Button\n          variant='contained'\n          color='primary'\n          size='large'\n          className={classes.button}\n          startIcon={<AddIcon />}\n          onClick={handleClickOpen}\n        >\n          Add Contact\n        </Button>\n      </div>\n      <Card>\n        <MaterialTable\n          title='Contact Details'\n          columns={[\n            {\n              title: 'Image',\n              field: 'selectedImage',\n              render: (rowData) => (\n                <img\n                  alt='Userimage'\n                  style={{ height: 36, borderRadius: '50%' }}\n                  src={rowData.selectedImage}\n                />\n              ),\n            },\n            { title: 'Name', field: 'name' },\n            { title: 'Email ID', field: 'email' },\n            { title: 'Phone No', field: 'phoneNo1' },\n            { title: 'Alt Phone No', field: 'phoneNo2' },\n            { title: 'Address', field: 'address' },\n            {\n              title: 'Edit/Delete',\n              field: 'edit',\n              render: (rowData) =>\n                rowData && (\n                  <>\n                    <IconButton\n                      color='primary'\n                      onClick={() => {\n                        setCurrentId(rowData._id);\n                        handleClickOpen();\n                      }}\n                    >\n                      <EditIcon />\n                    </IconButton>\n                    <IconButton\n                      color='secondary'\n                      onClick={() => {\n                        delContact(rowData._id);\n                      }}\n                    >\n                      <DeleteIcon />\n                    </IconButton>\n                  </>\n                ),\n            },\n          ]}\n          data={contacts}\n          actions={[\n            {\n              tooltip: 'Remove All Selected Contacts',\n              icon: 'delete',\n              onClick: (evt, data) => delContacts(data.map((a) => a._id)),\n            },\n          ]}\n          options={{\n            actionsColumnIndex: -1,\n            exportButton: true,\n            selection: true,\n          }}\n        />\n      </Card>\n    </>\n  );\n};\n\nexport default ContactTable;\n"]},"metadata":{},"sourceType":"module"}