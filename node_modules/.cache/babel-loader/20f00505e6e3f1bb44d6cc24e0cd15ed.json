{"ast":null,"code":"var _jsxFileName = \"E:\\\\contact-bok-mern\\\\contact-book-react\\\\src\\\\pages\\\\Auth.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { GoogleLogin } from 'react-google-login';\nimport Icon from '../components/Icon';\nimport { Container, Avatar, Button, CssBaseline, TextField, Grid, Typography } from '@material-ui/core';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Header from '../components/Header';\nimport { signin, signup } from '../actions/authActions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center'\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main\n  },\n  form: {\n    width: '100%',\n    // Fix IE 11 issue.\n    marginTop: theme.spacing(3)\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2)\n  },\n  googleButton: {\n    marginBottom: theme.spacing(2),\n    backgroundColor: 'red'\n  }\n}));\nconst initialState = {\n  firstName: '',\n  lastName: '',\n  email: '',\n  password: '',\n  confirmPassword: ''\n};\n\nconst Auth = ({\n  history\n}) => {\n  _s();\n\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const [isSignUp, setIsSignUp] = useState(false);\n  const [authForm, setAuthForm] = useState(initialState);\n  const userLogin = useSelector(state => state.userLogin);\n  const {\n    userInfo\n  } = userLogin;\n  useEffect(() => {\n    if (userInfo) {\n      history.push('/contact');\n    }\n  }, [history, userInfo]);\n\n  const googleSuccess = async res => {\n    console.log(res);\n    const result = res === null || res === void 0 ? void 0 : res.profileObj;\n\n    try {\n      const form = {\n        firstName: result.givenName,\n        lastName: result.familyName,\n        email: result.email,\n        password: result.googleId\n      };\n      await dispatch(signup(form));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const googleFaliure = () => {\n    console.log('Google Sign In Unsuccessful. Try Again Later');\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (isSignUp) {\n      if (!authForm.firstName || !authForm.lastName || !authForm.email || !authForm.password || authForm.password !== authForm.confirmPassword) {\n        alert('Please fill all fields or password does not matched !');\n      } else {\n        e.currentTarget.textContent = 'Signing up ....';\n        dispatch(signup(authForm));\n      }\n    } else {\n      if (!authForm.email || !authForm.password) {\n        alert('Please fill all fields !');\n      } else {\n        e.currentTarget.textContent = 'Signing in ...';\n        dispatch(signin(authForm));\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      component: \"main\",\n      maxWidth: \"xs\",\n      children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.paper,\n        children: [/*#__PURE__*/_jsxDEV(Avatar, {\n          className: classes.avatar,\n          children: /*#__PURE__*/_jsxDEV(LockOutlinedIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          component: \"h1\",\n          variant: \"h5\",\n          children: `${isSignUp ? 'Sign Up' : 'Sign In'}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          className: classes.form,\n          noValidate: true,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            spacing: 2,\n            children: [isSignUp && /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [' ', /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                sm: 6,\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  autoComplete: \"fname\",\n                  name: \"firstName\",\n                  variant: \"outlined\",\n                  required: true,\n                  fullWidth: true,\n                  id: \"firstName\",\n                  label: \"First Name\",\n                  autoFocus: true,\n                  onChange: e => setAuthForm({ ...authForm,\n                    firstName: e.target.value\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 134,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 133,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                sm: 6,\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  autoComplete: \"lname\",\n                  name: \"lastName\",\n                  variant: \"outlined\",\n                  required: true,\n                  fullWidth: true,\n                  id: \"lastName\",\n                  label: \"Last Name\",\n                  autoFocus: true,\n                  onChange: e => setAuthForm({ ...authForm,\n                    lastName: e.target.value\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 152,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 151,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                variant: \"outlined\",\n                required: true,\n                fullWidth: true,\n                id: \"email\",\n                label: \"Email Address\",\n                name: \"email\",\n                autoComplete: \"email\",\n                onChange: e => setAuthForm({ ...authForm,\n                  email: e.target.value\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 173,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                variant: \"outlined\",\n                required: true,\n                fullWidth: true,\n                name: \"password\",\n                label: \"Password\",\n                type: \"password\",\n                id: \"password\",\n                autoComplete: \"current-password\",\n                onChange: e => setAuthForm({ ...authForm,\n                  password: e.target.value\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 190,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 15\n            }, this), isSignUp && /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                variant: \"outlined\",\n                required: true,\n                fullWidth: true,\n                name: \"password\",\n                label: \"Confirm Password\",\n                type: \"password\",\n                id: \"conf_password\",\n                autoComplete: \"confirm-password\",\n                onChange: e => setAuthForm({ ...authForm,\n                  confirmPassword: e.target.value\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 209,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 208,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            fullWidth: true,\n            variant: \"contained\",\n            color: \"primary\",\n            className: classes.submit,\n            onClick: handleSubmit,\n            children: `${isSignUp ? 'Sign Up' : 'Sign In'}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(GoogleLogin, {\n            clientId: \"10895678735-uh5uilrg5rvv6q2vtfmju5b7i2tm8vp9.apps.googleusercontent.com\",\n            render: renderProps => /*#__PURE__*/_jsxDEV(Button, {\n              className: classes.googleButton,\n              color: \"primary\",\n              fullWidth: true,\n              startIcon: /*#__PURE__*/_jsxDEV(Icon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 245,\n                columnNumber: 30\n              }, this),\n              variant: \"contained\",\n              onClick: renderProps.onClick,\n              disabled: renderProps.disabled,\n              children: \"Google Log In\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 241,\n              columnNumber: 17\n            }, this),\n            onSuccess: googleSuccess,\n            onFaliure: googleFaliure,\n            cookiePolicy: \"single_host_origin\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            justify: \"flex-end\",\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              children: /*#__PURE__*/_jsxDEV(Link, {\n                to: \"#\",\n                variant: \"body2\",\n                onClick: e => {\n                  e.preventDefault();\n                  setIsSignUp(val => !val);\n                },\n                children: `${isSignUp ? 'Already have an account? Sign in' : 'Dont have an account? Sign up'}`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 260,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 259,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 258,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Auth, \"KXmPHZDET43Z6iMEl79MJGPdwm4=\", false, function () {\n  return [useStyles, useDispatch, useSelector];\n});\n\n_c = Auth;\nexport default Auth;\n\nvar _c;\n\n$RefreshReg$(_c, \"Auth\");","map":{"version":3,"sources":["E:/contact-bok-mern/contact-book-react/src/pages/Auth.js"],"names":["React","useEffect","useState","useDispatch","useSelector","Link","GoogleLogin","Icon","Container","Avatar","Button","CssBaseline","TextField","Grid","Typography","LockOutlinedIcon","makeStyles","Header","signin","signup","useStyles","theme","paper","marginTop","spacing","display","flexDirection","alignItems","avatar","margin","backgroundColor","palette","secondary","main","form","width","submit","googleButton","marginBottom","initialState","firstName","lastName","email","password","confirmPassword","Auth","history","classes","dispatch","isSignUp","setIsSignUp","authForm","setAuthForm","userLogin","state","userInfo","push","googleSuccess","res","console","log","result","profileObj","givenName","familyName","googleId","error","googleFaliure","handleSubmit","e","preventDefault","alert","currentTarget","textContent","target","value","renderProps","onClick","disabled","val"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,WAAT,QAA4B,oBAA5B;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,SACEC,SADF,EAEEC,MAFF,EAGEC,MAHF,EAIEC,WAJF,EAKEC,SALF,EAMEC,IANF,EAOEC,UAPF,QAQO,mBARP;AASA,OAAOC,gBAAP,MAA6B,iCAA7B;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,SAASC,MAAT,EAAiBC,MAAjB,QAA+B,wBAA/B;;;AAEA,MAAMC,SAAS,GAAGJ,UAAU,CAAEK,KAAD,KAAY;AACvCC,EAAAA,KAAK,EAAE;AACLC,IAAAA,SAAS,EAAEF,KAAK,CAACG,OAAN,CAAc,CAAd,CADN;AAELC,IAAAA,OAAO,EAAE,MAFJ;AAGLC,IAAAA,aAAa,EAAE,QAHV;AAILC,IAAAA,UAAU,EAAE;AAJP,GADgC;AAOvCC,EAAAA,MAAM,EAAE;AACNC,IAAAA,MAAM,EAAER,KAAK,CAACG,OAAN,CAAc,CAAd,CADF;AAENM,IAAAA,eAAe,EAAET,KAAK,CAACU,OAAN,CAAcC,SAAd,CAAwBC;AAFnC,GAP+B;AAWvCC,EAAAA,IAAI,EAAE;AACJC,IAAAA,KAAK,EAAE,MADH;AACW;AACfZ,IAAAA,SAAS,EAAEF,KAAK,CAACG,OAAN,CAAc,CAAd;AAFP,GAXiC;AAevCY,EAAAA,MAAM,EAAE;AACNP,IAAAA,MAAM,EAAER,KAAK,CAACG,OAAN,CAAc,CAAd,EAAiB,CAAjB,EAAoB,CAApB;AADF,GAf+B;AAkBvCa,EAAAA,YAAY,EAAE;AACZC,IAAAA,YAAY,EAAEjB,KAAK,CAACG,OAAN,CAAc,CAAd,CADF;AAEZM,IAAAA,eAAe,EAAE;AAFL;AAlByB,CAAZ,CAAD,CAA5B;AAwBA,MAAMS,YAAY,GAAG;AACnBC,EAAAA,SAAS,EAAE,EADQ;AAEnBC,EAAAA,QAAQ,EAAE,EAFS;AAGnBC,EAAAA,KAAK,EAAE,EAHY;AAInBC,EAAAA,QAAQ,EAAE,EAJS;AAKnBC,EAAAA,eAAe,EAAE;AALE,CAArB;;AAQA,MAAMC,IAAI,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAiB;AAAA;;AAC5B,QAAMC,OAAO,GAAG3B,SAAS,EAAzB;AAEA,QAAM4B,QAAQ,GAAG7C,WAAW,EAA5B;AAEA,QAAM,CAAC8C,QAAD,EAAWC,WAAX,IAA0BhD,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAM,CAACiD,QAAD,EAAWC,WAAX,IAA0BlD,QAAQ,CAACqC,YAAD,CAAxC;AAEA,QAAMc,SAAS,GAAGjD,WAAW,CAAEkD,KAAD,IAAWA,KAAK,CAACD,SAAlB,CAA7B;AACA,QAAM;AAAEE,IAAAA;AAAF,MAAeF,SAArB;AAEApD,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIsD,QAAJ,EAAc;AACZT,MAAAA,OAAO,CAACU,IAAR,CAAa,UAAb;AACD;AACF,GAJQ,EAIN,CAACV,OAAD,EAAUS,QAAV,CAJM,CAAT;;AAMA,QAAME,aAAa,GAAG,MAAOC,GAAP,IAAe;AACnCC,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACA,UAAMG,MAAM,GAAGH,GAAH,aAAGA,GAAH,uBAAGA,GAAG,CAAEI,UAApB;;AAEA,QAAI;AACF,YAAM5B,IAAI,GAAG;AACXM,QAAAA,SAAS,EAAEqB,MAAM,CAACE,SADP;AAEXtB,QAAAA,QAAQ,EAAEoB,MAAM,CAACG,UAFN;AAGXtB,QAAAA,KAAK,EAAEmB,MAAM,CAACnB,KAHH;AAIXC,QAAAA,QAAQ,EAAEkB,MAAM,CAACI;AAJN,OAAb;AAOA,YAAMjB,QAAQ,CAAC7B,MAAM,CAACe,IAAD,CAAP,CAAd;AACD,KATD,CASE,OAAOgC,KAAP,EAAc;AACdP,MAAAA,OAAO,CAACC,GAAR,CAAYM,KAAZ;AACD;AACF,GAhBD;;AAkBA,QAAMC,aAAa,GAAG,MAAM;AAC1BR,IAAAA,OAAO,CAACC,GAAR,CAAY,8CAAZ;AACD,GAFD;;AAIA,QAAMQ,YAAY,GAAIC,CAAD,IAAO;AAC1BA,IAAAA,CAAC,CAACC,cAAF;;AACA,QAAIrB,QAAJ,EAAc;AACZ,UACE,CAACE,QAAQ,CAACX,SAAV,IACA,CAACW,QAAQ,CAACV,QADV,IAEA,CAACU,QAAQ,CAACT,KAFV,IAGA,CAACS,QAAQ,CAACR,QAHV,IAIAQ,QAAQ,CAACR,QAAT,KAAsBQ,QAAQ,CAACP,eALjC,EAME;AACA2B,QAAAA,KAAK,CAAC,uDAAD,CAAL;AACD,OARD,MAQO;AACLF,QAAAA,CAAC,CAACG,aAAF,CAAgBC,WAAhB,GAA8B,iBAA9B;AACAzB,QAAAA,QAAQ,CAAC7B,MAAM,CAACgC,QAAD,CAAP,CAAR;AACD;AACF,KAbD,MAaO;AACL,UAAI,CAACA,QAAQ,CAACT,KAAV,IAAmB,CAACS,QAAQ,CAACR,QAAjC,EAA2C;AACzC4B,QAAAA,KAAK,CAAC,0BAAD,CAAL;AACD,OAFD,MAEO;AACLF,QAAAA,CAAC,CAACG,aAAF,CAAgBC,WAAhB,GAA8B,gBAA9B;AACAzB,QAAAA,QAAQ,CAAC9B,MAAM,CAACiC,QAAD,CAAP,CAAR;AACD;AACF;AACF,GAvBD;;AAyBA,sBACE;AAAA,4BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,SAAD;AAAW,MAAA,SAAS,EAAC,MAArB;AAA4B,MAAA,QAAQ,EAAC,IAArC;AAAA,8BACE,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAK,QAAA,SAAS,EAAEJ,OAAO,CAACzB,KAAxB;AAAA,gCACE,QAAC,MAAD;AAAQ,UAAA,SAAS,EAAEyB,OAAO,CAACnB,MAA3B;AAAA,iCACE,QAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE,QAAC,UAAD;AAAY,UAAA,SAAS,EAAC,IAAtB;AAA2B,UAAA,OAAO,EAAC,IAAnC;AAAA,oBACI,GAAEqB,QAAQ,GAAG,SAAH,GAAe,SAAU;AADvC;AAAA;AAAA;AAAA;AAAA,gBAJF,eAOE;AAAM,UAAA,SAAS,EAAEF,OAAO,CAACb,IAAzB;AAA+B,UAAA,UAAU,MAAzC;AAAA,kCACE,QAAC,IAAD;AAAM,YAAA,SAAS,MAAf;AAAgB,YAAA,OAAO,EAAE,CAAzB;AAAA,uBACGe,QAAQ,iBACP;AAAA,yBACG,GADH,eAEE,QAAC,IAAD;AAAM,gBAAA,IAAI,MAAV;AAAW,gBAAA,EAAE,EAAE,EAAf;AAAmB,gBAAA,EAAE,EAAE,CAAvB;AAAA,uCACE,QAAC,SAAD;AACE,kBAAA,YAAY,EAAC,OADf;AAEE,kBAAA,IAAI,EAAC,WAFP;AAGE,kBAAA,OAAO,EAAC,UAHV;AAIE,kBAAA,QAAQ,MAJV;AAKE,kBAAA,SAAS,MALX;AAME,kBAAA,EAAE,EAAC,WANL;AAOE,kBAAA,KAAK,EAAC,YAPR;AAQE,kBAAA,SAAS,MARX;AASE,kBAAA,QAAQ,EAAGoB,CAAD,IACRjB,WAAW,CAAC,EACV,GAAGD,QADO;AAEVX,oBAAAA,SAAS,EAAE6B,CAAC,CAACK,MAAF,CAASC;AAFV,mBAAD;AAVf;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,sBAFF,eAoBE,QAAC,IAAD;AAAM,gBAAA,IAAI,MAAV;AAAW,gBAAA,EAAE,EAAE,EAAf;AAAmB,gBAAA,EAAE,EAAE,CAAvB;AAAA,uCACE,QAAC,SAAD;AACE,kBAAA,YAAY,EAAC,OADf;AAEE,kBAAA,IAAI,EAAC,UAFP;AAGE,kBAAA,OAAO,EAAC,UAHV;AAIE,kBAAA,QAAQ,MAJV;AAKE,kBAAA,SAAS,MALX;AAME,kBAAA,EAAE,EAAC,UANL;AAOE,kBAAA,KAAK,EAAC,WAPR;AAQE,kBAAA,SAAS,MARX;AASE,kBAAA,QAAQ,EAAGN,CAAD,IACRjB,WAAW,CAAC,EACV,GAAGD,QADO;AAEVV,oBAAAA,QAAQ,EAAE4B,CAAC,CAACK,MAAF,CAASC;AAFT,mBAAD;AAVf;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,sBApBF;AAAA,4BAFJ,eA2CE,QAAC,IAAD;AAAM,cAAA,IAAI,MAAV;AAAW,cAAA,EAAE,EAAE,EAAf;AAAA,qCACE,QAAC,SAAD;AACE,gBAAA,OAAO,EAAC,UADV;AAEE,gBAAA,QAAQ,MAFV;AAGE,gBAAA,SAAS,MAHX;AAIE,gBAAA,EAAE,EAAC,OAJL;AAKE,gBAAA,KAAK,EAAC,eALR;AAME,gBAAA,IAAI,EAAC,OANP;AAOE,gBAAA,YAAY,EAAC,OAPf;AAQE,gBAAA,QAAQ,EAAGN,CAAD,IACRjB,WAAW,CAAC,EACV,GAAGD,QADO;AAEVT,kBAAAA,KAAK,EAAE2B,CAAC,CAACK,MAAF,CAASC;AAFN,iBAAD;AATf;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBA3CF,eA4DE,QAAC,IAAD;AAAM,cAAA,IAAI,MAAV;AAAW,cAAA,EAAE,EAAE,EAAf;AAAA,qCACE,QAAC,SAAD;AACE,gBAAA,OAAO,EAAC,UADV;AAEE,gBAAA,QAAQ,MAFV;AAGE,gBAAA,SAAS,MAHX;AAIE,gBAAA,IAAI,EAAC,UAJP;AAKE,gBAAA,KAAK,EAAC,UALR;AAME,gBAAA,IAAI,EAAC,UANP;AAOE,gBAAA,EAAE,EAAC,UAPL;AAQE,gBAAA,YAAY,EAAC,kBARf;AASE,gBAAA,QAAQ,EAAGN,CAAD,IACRjB,WAAW,CAAC,EACV,GAAGD,QADO;AAEVR,kBAAAA,QAAQ,EAAE0B,CAAC,CAACK,MAAF,CAASC;AAFT,iBAAD;AAVf;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBA5DF,EA8EG1B,QAAQ,iBACP,QAAC,IAAD;AAAM,cAAA,IAAI,MAAV;AAAW,cAAA,EAAE,EAAE,EAAf;AAAA,qCACE,QAAC,SAAD;AACE,gBAAA,OAAO,EAAC,UADV;AAEE,gBAAA,QAAQ,MAFV;AAGE,gBAAA,SAAS,MAHX;AAIE,gBAAA,IAAI,EAAC,UAJP;AAKE,gBAAA,KAAK,EAAC,kBALR;AAME,gBAAA,IAAI,EAAC,UANP;AAOE,gBAAA,EAAE,EAAC,eAPL;AAQE,gBAAA,YAAY,EAAC,kBARf;AASE,gBAAA,QAAQ,EAAGoB,CAAD,IACRjB,WAAW,CAAC,EACV,GAAGD,QADO;AAEVP,kBAAAA,eAAe,EAAEyB,CAAC,CAACK,MAAF,CAASC;AAFhB,iBAAD;AAVf;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBA/EJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAoGE,QAAC,MAAD;AACE,YAAA,IAAI,EAAC,QADP;AAEE,YAAA,SAAS,MAFX;AAGE,YAAA,OAAO,EAAC,WAHV;AAIE,YAAA,KAAK,EAAC,SAJR;AAKE,YAAA,SAAS,EAAE5B,OAAO,CAACX,MALrB;AAME,YAAA,OAAO,EAAEgC,YANX;AAAA,sBAOG,GAAEnB,QAAQ,GAAG,SAAH,GAAe,SAAU;AAPtC;AAAA;AAAA;AAAA;AAAA,kBApGF,eA8GE,QAAC,WAAD;AACE,YAAA,QAAQ,EAAC,yEADX;AAEE,YAAA,MAAM,EAAG2B,WAAD,iBACN,QAAC,MAAD;AACE,cAAA,SAAS,EAAE7B,OAAO,CAACV,YADrB;AAEE,cAAA,KAAK,EAAC,SAFR;AAGE,cAAA,SAAS,MAHX;AAIE,cAAA,SAAS,eAAE,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA,sBAJb;AAKE,cAAA,OAAO,EAAC,WALV;AAME,cAAA,OAAO,EAAEuC,WAAW,CAACC,OANvB;AAOE,cAAA,QAAQ,EAAED,WAAW,CAACE,QAPxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAHJ;AAeE,YAAA,SAAS,EAAErB,aAfb;AAgBE,YAAA,SAAS,EAAEU,aAhBb;AAiBE,YAAA,YAAY,EAAC;AAjBf;AAAA;AAAA;AAAA;AAAA,kBA9GF,eAkIE,QAAC,IAAD;AAAM,YAAA,SAAS,MAAf;AAAgB,YAAA,OAAO,EAAC,UAAxB;AAAA,mCACE,QAAC,IAAD;AAAM,cAAA,IAAI,MAAV;AAAA,qCACE,QAAC,IAAD;AACE,gBAAA,EAAE,EAAC,GADL;AAEE,gBAAA,OAAO,EAAC,OAFV;AAGE,gBAAA,OAAO,EAAGE,CAAD,IAAO;AACdA,kBAAAA,CAAC,CAACC,cAAF;AACApB,kBAAAA,WAAW,CAAE6B,GAAD,IAAS,CAACA,GAAX,CAAX;AACD,iBANH;AAAA,0BAOG,GACD9B,QAAQ,GACJ,kCADI,GAEJ,+BACL;AAXD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBAlIF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPF;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA,kBADF;AAmKD,CAnOD;;GAAMJ,I;UACYzB,S,EAECjB,W,EAKCC,W;;;KARdyC,I;AAqON,eAAeA,IAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { GoogleLogin } from 'react-google-login';\nimport Icon from '../components/Icon';\nimport {\n  Container,\n  Avatar,\n  Button,\n  CssBaseline,\n  TextField,\n  Grid,\n  Typography,\n} from '@material-ui/core';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Header from '../components/Header';\nimport { signin, signup } from '../actions/authActions';\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(3),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n  googleButton: {\n    marginBottom: theme.spacing(2),\n    backgroundColor: 'red',\n  },\n}));\n\nconst initialState = {\n  firstName: '',\n  lastName: '',\n  email: '',\n  password: '',\n  confirmPassword: '',\n};\n\nconst Auth = ({ history }) => {\n  const classes = useStyles();\n\n  const dispatch = useDispatch();\n\n  const [isSignUp, setIsSignUp] = useState(false);\n  const [authForm, setAuthForm] = useState(initialState);\n\n  const userLogin = useSelector((state) => state.userLogin);\n  const { userInfo } = userLogin;\n\n  useEffect(() => {\n    if (userInfo) {\n      history.push('/contact');\n    }\n  }, [history, userInfo]);\n\n  const googleSuccess = async (res) => {\n    console.log(res);\n    const result = res?.profileObj;\n\n    try {\n      const form = {\n        firstName: result.givenName,\n        lastName: result.familyName,\n        email: result.email,\n        password: result.googleId,\n      };\n\n      await dispatch(signup(form));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const googleFaliure = () => {\n    console.log('Google Sign In Unsuccessful. Try Again Later');\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (isSignUp) {\n      if (\n        !authForm.firstName ||\n        !authForm.lastName ||\n        !authForm.email ||\n        !authForm.password ||\n        authForm.password !== authForm.confirmPassword\n      ) {\n        alert('Please fill all fields or password does not matched !');\n      } else {\n        e.currentTarget.textContent = 'Signing up ....';\n        dispatch(signup(authForm));\n      }\n    } else {\n      if (!authForm.email || !authForm.password) {\n        alert('Please fill all fields !');\n      } else {\n        e.currentTarget.textContent = 'Signing in ...';\n        dispatch(signin(authForm));\n      }\n    }\n  };\n\n  return (\n    <>\n      <Header />\n      <Container component='main' maxWidth='xs'>\n        <CssBaseline />\n        <div className={classes.paper}>\n          <Avatar className={classes.avatar}>\n            <LockOutlinedIcon />\n          </Avatar>\n          <Typography component='h1' variant='h5'>\n            {`${isSignUp ? 'Sign Up' : 'Sign In'}`}\n          </Typography>\n          <form className={classes.form} noValidate>\n            <Grid container spacing={2}>\n              {isSignUp && (\n                <>\n                  {' '}\n                  <Grid item xs={12} sm={6}>\n                    <TextField\n                      autoComplete='fname'\n                      name='firstName'\n                      variant='outlined'\n                      required\n                      fullWidth\n                      id='firstName'\n                      label='First Name'\n                      autoFocus\n                      onChange={(e) =>\n                        setAuthForm({\n                          ...authForm,\n                          firstName: e.target.value,\n                        })\n                      }\n                    />\n                  </Grid>\n                  <Grid item xs={12} sm={6}>\n                    <TextField\n                      autoComplete='lname'\n                      name='lastName'\n                      variant='outlined'\n                      required\n                      fullWidth\n                      id='lastName'\n                      label='Last Name'\n                      autoFocus\n                      onChange={(e) =>\n                        setAuthForm({\n                          ...authForm,\n                          lastName: e.target.value,\n                        })\n                      }\n                    />\n                  </Grid>\n                </>\n              )}\n\n              <Grid item xs={12}>\n                <TextField\n                  variant='outlined'\n                  required\n                  fullWidth\n                  id='email'\n                  label='Email Address'\n                  name='email'\n                  autoComplete='email'\n                  onChange={(e) =>\n                    setAuthForm({\n                      ...authForm,\n                      email: e.target.value,\n                    })\n                  }\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <TextField\n                  variant='outlined'\n                  required\n                  fullWidth\n                  name='password'\n                  label='Password'\n                  type='password'\n                  id='password'\n                  autoComplete='current-password'\n                  onChange={(e) =>\n                    setAuthForm({\n                      ...authForm,\n                      password: e.target.value,\n                    })\n                  }\n                />\n              </Grid>\n              {isSignUp && (\n                <Grid item xs={12}>\n                  <TextField\n                    variant='outlined'\n                    required\n                    fullWidth\n                    name='password'\n                    label='Confirm Password'\n                    type='password'\n                    id='conf_password'\n                    autoComplete='confirm-password'\n                    onChange={(e) =>\n                      setAuthForm({\n                        ...authForm,\n                        confirmPassword: e.target.value,\n                      })\n                    }\n                  />\n                </Grid>\n              )}\n            </Grid>\n            <Button\n              type='submit'\n              fullWidth\n              variant='contained'\n              color='primary'\n              className={classes.submit}\n              onClick={handleSubmit}\n            >{`${isSignUp ? 'Sign Up' : 'Sign In'}`}</Button>\n\n            {/* Google Login Button */}\n            <GoogleLogin\n              clientId='10895678735-uh5uilrg5rvv6q2vtfmju5b7i2tm8vp9.apps.googleusercontent.com'\n              render={(renderProps) => (\n                <Button\n                  className={classes.googleButton}\n                  color='primary'\n                  fullWidth\n                  startIcon={<Icon />}\n                  variant='contained'\n                  onClick={renderProps.onClick}\n                  disabled={renderProps.disabled}\n                >\n                  Google Log In\n                </Button>\n              )}\n              onSuccess={googleSuccess}\n              onFaliure={googleFaliure}\n              cookiePolicy='single_host_origin'\n            />\n\n            <Grid container justify='flex-end'>\n              <Grid item>\n                <Link\n                  to='#'\n                  variant='body2'\n                  onClick={(e) => {\n                    e.preventDefault();\n                    setIsSignUp((val) => !val);\n                  }}\n                >{`${\n                  isSignUp\n                    ? 'Already have an account? Sign in'\n                    : 'Dont have an account? Sign up'\n                }`}</Link>\n              </Grid>\n            </Grid>\n          </form>\n        </div>\n      </Container>\n    </>\n  );\n};\n\nexport default Auth;\n"]},"metadata":{},"sourceType":"module"}