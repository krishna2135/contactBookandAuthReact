{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { contactReducer } from './reducers/contactReducer';\nimport { authReducer } from './reducers/authReducer';\nconst reducers = combineReducers({\n  contacts: contactReducer,\n  userLogin: authReducer\n});\nconst userInfoFromStorage = localStorage.getItem('userInfo') ? JSON.parse(localStorage.getItem('userInfo')) : null;\nconst initialState = {\n  userLogin: {\n    userInfo: userInfoFromStorage\n  }\n};\nconst middleware = [thunk];\nconst store = createStore(reducers, initialState, composeWithDevTools(applyMiddleware(...middleware)));\nexport default store;","map":{"version":3,"sources":["E:/contact-bok-mern/contact-book-react/src/store.js"],"names":["createStore","combineReducers","applyMiddleware","thunk","composeWithDevTools","contactReducer","authReducer","reducers","contacts","userLogin","userInfoFromStorage","localStorage","getItem","JSON","parse","initialState","userInfo","middleware","store"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,QAA8D,OAA9D;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,mBAAT,QAAoC,0BAApC;AAEA,SAASC,cAAT,QAA+B,2BAA/B;AAEA,SAASC,WAAT,QAA4B,wBAA5B;AAEA,MAAMC,QAAQ,GAAGN,eAAe,CAAC;AAC/BO,EAAAA,QAAQ,EAAEH,cADqB;AAE/BI,EAAAA,SAAS,EAAEH;AAFoB,CAAD,CAAhC;AAKA,MAAMI,mBAAmB,GAAGC,YAAY,CAACC,OAAb,CAAqB,UAArB,IACxBC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAX,CADwB,GAExB,IAFJ;AAIA,MAAMG,YAAY,GAAG;AAAEN,EAAAA,SAAS,EAAE;AAAEO,IAAAA,QAAQ,EAAEN;AAAZ;AAAb,CAArB;AAEA,MAAMO,UAAU,GAAG,CAACd,KAAD,CAAnB;AAEA,MAAMe,KAAK,GAAGlB,WAAW,CACvBO,QADuB,EAEvBQ,YAFuB,EAGvBX,mBAAmB,CAACF,eAAe,CAAC,GAAGe,UAAJ,CAAhB,CAHI,CAAzB;AAMA,eAAeC,KAAf","sourcesContent":["import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\nimport { contactReducer } from './reducers/contactReducer';\n\nimport { authReducer } from './reducers/authReducer';\n\nconst reducers = combineReducers({\n  contacts: contactReducer,\n  userLogin: authReducer,\n});\n\nconst userInfoFromStorage = localStorage.getItem('userInfo')\n  ? JSON.parse(localStorage.getItem('userInfo'))\n  : null;\n\nconst initialState = { userLogin: { userInfo: userInfoFromStorage } };\n\nconst middleware = [thunk];\n\nconst store = createStore(\n  reducers,\n  initialState,\n  composeWithDevTools(applyMiddleware(...middleware))\n);\n\nexport default store;\n"]},"metadata":{},"sourceType":"module"}